"use strict";!function(){var t=document.querySelector(".header__bg"),e=(new Parallax(t),document.querySelector(".how-it-works__bg"));new Parallax(e)}(),function(){var t=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(t,"px"));var e,o,n=document.querySelector("body");function i(t,e){this.trigger=t,this.modal=e,this.overlay=this.modal.querySelector(".modal__overlay"),this.closeBtn=this.modal.querySelector(".modal__close"),this.onOverlayClick=this.onOverlayClick.bind(this),this.onCloseClick=this.onCloseClick.bind(this),this.onTriggerClick=this.onTriggerClick.bind(this),this.addEventListeners()}window.addEventListener("resize",(e=function(){var t=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(t,"px"))},function(t){o&&clearTimeout(o),o=setTimeout(e,100,t)})),i.prototype.open=function(){this.modal.classList.add("js-show"),n.classList.add("js__body-no-scroll")},i.prototype.close=function(){this.modal.classList.remove("js-show"),n.classList.remove("js__body-no-scroll")},i.prototype.onOverlayClick=function(t){t.target===this.overlay&&this.close()},i.prototype.onCloseClick=function(){this.close()},i.prototype.onTriggerClick=function(){this.open()},i.prototype.addEventListeners=function(){this.overlay.addEventListener("click",this.onOverlayClick),this.closeBtn.addEventListener("click",this.onCloseClick),this.trigger.addEventListener("click",this.onTriggerClick)},window.Modal=i}(),function(){var t=document.querySelectorAll(".input-phone");if(t[0]){var e=new Inputmask("+7(999) 999-99-99");t.forEach((function(t){e.mask(t)}))}}(),$("a.header__nav-link").click((function(){var t=$(this).attr("href"),e=$(t).offset().top-80;return $("html, body").animate({scrollTop:e},400),$(this).parents(".header__bar").removeClass("js-opened"),!1})),$(window).scrollTop()>800?$(".to-top").addClass("show"):$(".to-top").removeClass("show"),$(window).scroll((function(){$(this).scrollTop()>800?$(".to-top").addClass("show"):$(".to-top").removeClass("show")})),$(".to-top").click((function(){$("html, body").animate({scrollTop:0},400)})),document.querySelectorAll(".mobile-control__item-text"),function(){document.querySelector(".catalog__filters-list");var t=document.querySelectorAll(".catalog__item"),e=document.querySelectorAll(".catalog__filters-radio"),o=function(){t.forEach((function(t){!function(t){t.classList.contains("hidden")&&t.classList.remove("hidden")}(t)}))},n=function(e){!function(e){"all"===e?o():(o(),t.forEach((function(t){t.getAttribute("data-brand")!==e&&function(t){t.classList.contains("hidden")||t.classList.add("hidden")}(t)})))}(e.currentTarget.getAttribute("value"))};e.forEach((function(t){t.addEventListener("change",n)})),$(".catalog__select-block select").change((function(){var t=$(this).children("option:selected").text(),e=$(this).val();console.log(e),$(this).parent().prev().text(t),$(".catalog__item").hide(),$(".catalog__item[data-brand="+e+"]").show()}))}(),new Swiper(".device-card__slider-container",{watchOverflow:!0,pagination:{el:".swiper-pagination",clickable:!0}}),$(".header__nav-btn").click((function(){$(this).parents(".header__bar").toggleClass("js-opened")})),$(".questions__item-top").click((function(){$(this).toggleClass("opened"),$(this).next().slideToggle()}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
