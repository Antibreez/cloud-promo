"use strict";!function(){var t=document.querySelector(".header__bg"),e=(new Parallax(t),document.querySelector(".how-it-works__bg"));new Parallax(e)}(),function(){var t=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(t,"px"));var e,o,i=document.querySelector("body");function n(t,e){this.trigger=t,this.modal=e,this.overlay=this.modal.querySelector(".modal__overlay"),this.closeBtn=this.modal.querySelector(".modal__close"),this.onOverlayClick=this.onOverlayClick.bind(this),this.onCloseClick=this.onCloseClick.bind(this),this.onTriggerClick=this.onTriggerClick.bind(this),this.addEventListeners()}window.addEventListener("resize",(e=function(){var t=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(t,"px"))},function(t){o&&clearTimeout(o),o=setTimeout(e,100,t)})),n.prototype.open=function(){this.modal.classList.add("js-show"),i.classList.add("js__body-no-scroll")},n.prototype.close=function(){this.modal.classList.remove("js-show"),i.classList.remove("js__body-no-scroll")},n.prototype.onOverlayClick=function(t){t.target===this.overlay&&this.close()},n.prototype.onCloseClick=function(){this.close()},n.prototype.onTriggerClick=function(){this.open()},n.prototype.addEventListeners=function(){this.overlay.addEventListener("click",this.onOverlayClick),this.closeBtn.addEventListener("click",this.onCloseClick),this.trigger.addEventListener("click",this.onTriggerClick)},window.Modal=n}(),function(){var t=document.querySelectorAll(".input-phone");if(t[0]){var e=new Inputmask("+7(999) 999-99-99");t.forEach((function(t){e.mask(t)}))}}(),document.querySelectorAll(".mobile-control__item-text"),function(){document.querySelector(".catalog__filters-list");var t=document.querySelectorAll(".catalog__item"),e=document.querySelectorAll(".catalog__filters-radio"),o=function(){t.forEach((function(t){!function(t){t.classList.contains("hidden")&&t.classList.remove("hidden")}(t)}))},i=function(e){!function(e){"all"===e?o():(o(),t.forEach((function(t){t.getAttribute("data-brand")!==e&&function(t){t.classList.contains("hidden")||t.classList.add("hidden")}(t)})))}(e.currentTarget.getAttribute("value"))};e.forEach((function(t){t.addEventListener("change",i)}))}(),new Swiper(".device-card__slider-container",{loop:!0,pagination:{el:".swiper-pagination",clickable:!0}}),$(".questions__item-top").click((function(){console.log($(this)[0]),$(this).toggleClass("opened"),$(this).next().slideToggle()}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
